slick.dbs.default {
  profile ="slick.jdbc.PostgresProfile$"
  db {
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://"${?RDS_HOSTNAME}":"${?RDS_PORT}"/"${?RDS_DB_NAME},
    user=${?RDS_USERNAME},
    password=${?RDS_PASSWORD},
    numThreads=4
  }
}

akka.actor.default-dispatcher.fork-join-executor {
  parallelism-factor = 1.0
  parallelism-min = 1
  parallelism-max = 8
  task-peeking-mode = LIFO
}

akka.persistence {
  journal {
    plugin = "cassandra-journal"
  }
  snapshot-store {
    plugin = "cassandra-snapshot-store"
  }
}

akka.persistence.query.journal.leveldb {
  refresh-interval = 1ms
}

akka.actor.warn-about-java-serializer-usage = false

play.evolutions.db.default.autoApply = true
play.evolutions.db.default.autocommit = false

play.http.secret.key="`>eV:HIOS9_@QULTQjKW54FkJBIhl`JngL[WQ@zqmF@kZYBtfe6@^Hu12:fGAT1]"

play.i18n.langs=["en"]

play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

play.http.filters = "pl.edu.agh.msc.auth.filters.Filters"

play.modules.enabled += "pl.edu.agh.msc.auth.AuthModule"
play.modules.enabled += "pl.edu.agh.msc.ShopModule"
play.modules.enabled += "pl.edu.agh.msc.InitModule"

play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

play.filters.headers {
  contentSecurityPolicy = null
  referrerPolicy = null
}

silhouette {
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=30 minutes
  authenticator.authenticatorExpiry=12 hours

  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  authenticator.signer.key = "[changeme]" // A unique encryption key
  authenticator.crypter.key = "[changeme]" // A unique encryption key

}


cassandra-journal {
  contact-points = ["127.0.0.1"]
  port = 9042
  cluster-id = ""
  events-by-tag {
    flush-interval = 250ms
  }
  authentication.username = ""
  authentication.password = ""

  event-adapters {
    tagging-adapter = "pl.edu.agh.msc.orders.write.OrderEventTagger"
  }
  event-adapter-bindings {
    "pl.edu.agh.msc.orders.write.OrderEntity$Event" = tagging-adapter
  }
}

cassandra-snapshot-store {
  contact-points = ["127.0.0.1"]
  port = 9042
  cluster-id = ""
  authentication.username = ""
  authentication.password = ""
}

cassandra-query-journal {
  refresh-interval = 10ms
}

cassandra-plugin-default-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 0.5
    parallelism-max = 8
  }
}
